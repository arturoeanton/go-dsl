openapi: 3.0.3
info:
  title: Motor Contable Cloud-Native API
  description: |
    API completa del Motor Contable basado en Go/Fiber/go-dsl/PostgreSQL.
    
    ## Fase 1 - Monolito Base
    Esta documentación cubre todas las APIs de la Fase 1 (sin autenticación).
    
    ## Stack Tecnológico
    - **Backend**: Go 1.21+ + Fiber v2
    - **Database**: PostgreSQL 15+
    - **DSL Engine**: go-dsl (existing)
    - **Frontend**: HTML5 + Chart.js + Vanilla JS
    
    ## Características
    - Multi-tenant (por organization_id)
    - Procesamiento async con go-dsl
    - Particionamiento automático
    - Validación de balance contable
    - Generación de reportes
    
  version: 2.0.0
  contact:
    name: Motor Contable Team
    email: tech@motorcontable.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:8080/api/v1
    description: Servidor de desarrollo
  - url: https://staging-api.motorcontable.com/v1
    description: Servidor de staging
  - url: https://api.motorcontable.com/v1
    description: Servidor de producción

tags:
  - name: Health
    description: Health checks y métricas del sistema
  - name: Dashboard
    description: KPIs, gráficos y actividad reciente
  - name: Vouchers
    description: Gestión de comprobantes (documentos fuente)
  - name: Journal Entries
    description: Asientos contables generados
  - name: Accounts
    description: Plan de cuentas contables
  - name: Reports
    description: Generación de reportes y libros contables
  - name: DSL
    description: Editor y plantillas DSL
  - name: Catalogs
    description: Catálogos y configuración del sistema
  - name: Third Parties
    description: Gestión de terceros (clientes/proveedores)
  - name: Audit
    description: Logs de auditoría y trazabilidad

paths:
  # ============================================
  # HEALTH & METRICS
  # ============================================
  /health:
    get:
      tags: [Health]
      summary: Health check del sistema
      description: Verifica el estado de salud de la aplicación y sus dependencias
      responses:
        '200':
          description: Sistema saludable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
        '503':
          description: Sistema con problemas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /metrics:
    get:
      tags: [Health]
      summary: Métricas del sistema
      description: Métricas de performance y uso del sistema
      responses:
        '200':
          description: Métricas obtenidas exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsResponse'

  # ============================================
  # DASHBOARD
  # ============================================
  /dashboard:
    get:
      tags: [Dashboard]
      summary: Datos completos del dashboard
      description: Obtiene KPIs, gráficos, actividad reciente y salud del sistema
      parameters:
        - name: organization_id
          in: query
          required: true
          schema:
            type: string
            format: uuid
          description: ID de la organización
      responses:
        '200':
          description: Datos del dashboard obtenidos exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardResponse'
        '400':
          description: Parámetros inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /dashboard/charts:
    get:
      tags: [Dashboard]
      summary: Datos para gráficos
      description: Obtiene datos específicos para renderizar gráficos con Chart.js
      parameters:
        - name: organization_id
          in: query
          required: true
          schema:
            type: string
            format: uuid
        - name: period
          in: query
          schema:
            type: string
            enum: [7_days, 30_days, current_month]
            default: 7_days
      responses:
        '200':
          description: Datos de gráficos obtenidos exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChartsResponse'

  # ============================================
  # VOUCHERS (COMPROBANTES)
  # ============================================
  /vouchers:
    get:
      tags: [Vouchers]
      summary: Listar comprobantes
      description: Lista comprobantes con filtros, búsqueda y paginación
      parameters:
        - name: organization_id
          in: query
          required: true
          schema:
            type: string
            format: uuid
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 10
            maximum: 100
            default: 25
        - name: type
          in: query
          schema:
            type: string
            enum: [invoice_sale, invoice_purchase, payment, receipt, credit_note, debit_note, journal_entry]
        - name: status
          in: query
          schema:
            type: string
            enum: [PENDING, PROCESSING, PROCESSED, ERROR, CANCELLED]
        - name: date_from
          in: query
          schema:
            type: string
            format: date
        - name: date_to
          in: query
          schema:
            type: string
            format: date
        - name: search
          in: query
          schema:
            type: string
          description: Búsqueda por número, descripción o tercero
      responses:
        '200':
          description: Lista de comprobantes obtenida exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VouchersListResponse'

    post:
      tags: [Vouchers]
      summary: Crear comprobante
      description: Crea un nuevo comprobante con líneas de detalle
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVoucherRequest'
      responses:
        '201':
          description: Comprobante creado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoucherResponse'
        '400':
          description: Datos inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /vouchers/{id}:
    get:
      tags: [Vouchers]
      summary: Obtener comprobante por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Comprobante obtenido exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoucherResponse'
        '404':
          description: Comprobante no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    put:
      tags: [Vouchers]
      summary: Actualizar comprobante
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVoucherRequest'
      responses:
        '200':
          description: Comprobante actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoucherResponse'
        '400':
          description: Datos inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Comprobante no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      tags: [Vouchers]
      summary: Eliminar comprobante
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Comprobante eliminado exitosamente
        '400':
          description: No se puede eliminar (ya procesado)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Comprobante no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /vouchers/{id}/process:
    post:
      tags: [Vouchers]
      summary: Procesar comprobante
      description: Ejecuta plantilla DSL para generar asientos contables
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Comprobante procesado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessVoucherResponse'
        '400':
          description: Error en el procesamiento
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /vouchers/types:
    get:
      tags: [Vouchers]
      summary: Obtener tipos de comprobante
      parameters:
        - name: organization_id
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Tipos de comprobante obtenidos exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoucherTypesResponse'

  # ============================================
  # JOURNAL ENTRIES (ASIENTOS CONTABLES)
  # ============================================
  /journal-entries:
    get:
      tags: [Journal Entries]
      summary: Listar asientos contables
      parameters:
        - name: organization_id
          in: query
          required: true
          schema:
            type: string
            format: uuid
        - name: period
          in: query
          schema:
            type: string
            pattern: '^[0-9]{4}-[0-9]{2}$'
          description: Período en formato YYYY-MM
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 10
            maximum: 100
            default: 25
      responses:
        '200':
          description: Lista de asientos obtenida exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JournalEntriesListResponse'

    post:
      tags: [Journal Entries]
      summary: Crear asiento manual
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateJournalEntryRequest'
      responses:
        '201':
          description: Asiento creado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JournalEntryResponse'
        '400':
          description: Asiento no balanceado o datos inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /journal-entries/{id}:
    get:
      tags: [Journal Entries]
      summary: Obtener asiento por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Asiento obtenido exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JournalEntryResponse'
        '404':
          description: Asiento no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /journal-entries/{id}/reverse:
    post:
      tags: [Journal Entries]
      summary: Reversar asiento
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: string
                  description: Motivo de la reversión
              required: [reason]
      responses:
        '201':
          description: Asiento de reversión creado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JournalEntryResponse'

  # ============================================
  # ACCOUNTS (PLAN DE CUENTAS)
  # ============================================
  /accounts/tree:
    get:
      tags: [Accounts]
      summary: Obtener árbol de cuentas
      parameters:
        - name: organization_id
          in: query
          required: true
          schema:
            type: string
            format: uuid
        - name: expanded
          in: query
          schema:
            type: boolean
            default: false
          description: Si retornar el árbol expandido o colapsado
      responses:
        '200':
          description: Árbol de cuentas obtenido exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsTreeResponse'

  /accounts:
    get:
      tags: [Accounts]
      summary: Listar cuentas con filtros
      parameters:
        - name: organization_id
          in: query
          required: true
          schema:
            type: string
            format: uuid
        - name: type
          in: query
          schema:
            type: string
            enum: [ASSET, LIABILITY, EQUITY, INCOME, EXPENSE]
        - name: level
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 10
        - name: detail_only
          in: query
          schema:
            type: boolean
          description: Solo cuentas de detalle
        - name: search
          in: query
          schema:
            type: string
          description: Búsqueda por código o nombre
      responses:
        '200':
          description: Lista de cuentas obtenida exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsListResponse'

    post:
      tags: [Accounts]
      summary: Crear cuenta
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccountRequest'
      responses:
        '201':
          description: Cuenta creada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponse'
        '400':
          description: Código duplicado o datos inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /accounts/{id}:
    get:
      tags: [Accounts]
      summary: Obtener cuenta por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Cuenta obtenida exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponse'

    put:
      tags: [Accounts]
      summary: Actualizar cuenta
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccountRequest'
      responses:
        '200':
          description: Cuenta actualizada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponse'

  /accounts/{id}/balance:
    get:
      tags: [Accounts]
      summary: Obtener balance de cuenta
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: period
          in: query
          schema:
            type: string
            pattern: '^[0-9]{4}-[0-9]{2}$'
        - name: date_to
          in: query
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Balance obtenido exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountBalanceResponse'

  /accounts/types:
    get:
      tags: [Accounts]
      summary: Obtener tipos de cuentas
      responses:
        '200':
          description: Tipos de cuentas obtenidos exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountTypesResponse'

  # ============================================
  # REPORTS (REPORTES)
  # ============================================
  /reports/types:
    get:
      tags: [Reports]
      summary: Obtener tipos de reportes disponibles
      responses:
        '200':
          description: Tipos de reportes obtenidos exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportTypesResponse'

  /reports/generate:
    post:
      tags: [Reports]
      summary: Generar reporte
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateReportRequest'
      responses:
        '202':
          description: Generación de reporte iniciada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportJobResponse'
        '400':
          description: Parámetros inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /reports/{job_id}/status:
    get:
      tags: [Reports]
      summary: Obtener estado de generación
      parameters:
        - name: job_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Estado obtenido exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportStatusResponse'

  /reports/{job_id}/download:
    get:
      tags: [Reports]
      summary: Descargar reporte generado
      parameters:
        - name: job_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Archivo del reporte
          content:
            application/pdf:
              schema:
                type: string
                format: binary
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                type: string
                format: binary
            text/csv:
              schema:
                type: string
        '404':
          description: Reporte no encontrado o expirado

  /reports/recent:
    get:
      tags: [Reports]
      summary: Obtener reportes recientes
      parameters:
        - name: organization_id
          in: query
          required: true
          schema:
            type: string
            format: uuid
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 50
            default: 10
      responses:
        '200':
          description: Reportes recientes obtenidos exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecentReportsResponse'

  # ============================================
  # DSL TEMPLATES
  # ============================================
  /dsl/templates:
    get:
      tags: [DSL]
      summary: Listar plantillas DSL
      parameters:
        - name: organization_id
          in: query
          required: true
          schema:
            type: string
            format: uuid
        - name: voucher_type
          in: query
          schema:
            type: string
            enum: [invoice_sale, invoice_purchase, payment, receipt, credit_note, debit_note, journal_entry]
        - name: active_only
          in: query
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: Lista de plantillas obtenida exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DSLTemplatesResponse'

    post:
      tags: [DSL]
      summary: Crear plantilla DSL
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDSLTemplateRequest'
      responses:
        '201':
          description: Plantilla creada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DSLTemplateResponse'
        '400':
          description: Error de sintaxis DSL
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /dsl/templates/{id}:
    get:
      tags: [DSL]
      summary: Obtener plantilla DSL por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Plantilla obtenida exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DSLTemplateResponse'

    put:
      tags: [DSL]
      summary: Actualizar plantilla DSL
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDSLTemplateRequest'
      responses:
        '200':
          description: Plantilla actualizada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DSLTemplateResponse'

  /dsl/templates/{id}/validate:
    post:
      tags: [DSL]
      summary: Validar plantilla DSL
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateDSLRequest'
      responses:
        '200':
          description: Validación exitosa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DSLValidationResponse'
        '400':
          description: Errores de validación
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /dsl/examples:
    get:
      tags: [DSL]
      summary: Obtener ejemplos de plantillas DSL
      responses:
        '200':
          description: Ejemplos obtenidos exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DSLExamplesResponse'

  # ============================================
  # CATALOGS (CATÁLOGOS)
  # ============================================
  /catalogs/countries:
    get:
      tags: [Catalogs]
      summary: Obtener lista de países soportados
      responses:
        '200':
          description: Lista de países obtenida exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountriesResponse'

  /catalogs/currencies:
    get:
      tags: [Catalogs]
      summary: Obtener lista de monedas soportadas
      responses:
        '200':
          description: Lista de monedas obtenida exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrenciesResponse'

  /catalogs/organizations:
    get:
      tags: [Catalogs]
      summary: Obtener organizaciones (para multi-tenant)
      responses:
        '200':
          description: Lista de organizaciones obtenida exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsResponse'

  # ============================================
  # LOOKUPS & CATALOGS
  # ============================================
  /lookups/tax-types:
    get:
      tags: [Catalogs]
      summary: Obtener tipos de impuestos
      responses:
        '200':
          description: Tipos de impuestos obtenidos exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxTypesResponse'

  /lookups/document-types:
    get:
      tags: [Catalogs]
      summary: Obtener tipos de documentos
      responses:
        '200':
          description: Tipos de documentos obtenidos exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentTypesResponse'

  # ============================================
  # PERIODS (PERÍODOS CONTABLES)
  # ============================================
  /periods/current:
    get:
      tags: [Catalogs]
      summary: Obtener período contable actual
      parameters:
        - name: organization_id
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Período actual obtenido exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeriodCurrentResponse'

  /periods:
    get:
      tags: [Catalogs]
      summary: Listar períodos contables
      parameters:
        - name: organization_id
          in: query
          required: true
          schema:
            type: string
            format: uuid
        - name: year
          in: query
          schema:
            type: integer
            minimum: 2020
            maximum: 2050
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 10
            maximum: 100
            default: 25
      responses:
        '200':
          description: Lista de períodos obtenida exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeriodsListResponse'

  # ============================================
  # ORGANIZATIONS & USERS
  # ============================================
  /organizations/current:
    get:
      tags: [Catalogs]
      summary: Obtener organización actual
      responses:
        '200':
          description: Organización actual obtenida exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationCurrentResponse'

  /users/profile:
    get:
      tags: [Catalogs]
      summary: Obtener perfil del usuario actual
      responses:
        '200':
          description: Perfil obtenido exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileResponse'

  /users/preferences:
    get:
      tags: [Catalogs]
      summary: Obtener preferencias del usuario
      responses:
        '200':
          description: Preferencias obtenidas exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPreferencesResponse'

  # ============================================
  # AUDIT & LOGS
  # ============================================
  /audit/logs:
    get:
      tags: [Audit]
      summary: Obtener logs de auditoría
      parameters:
        - name: organization_id
          in: query
          required: true
          schema:
            type: string
            format: uuid
        - name: date_from
          in: query
          schema:
            type: string
            format: date-time
        - name: date_to
          in: query
          schema:
            type: string
            format: date-time
        - name: level
          in: query
          schema:
            type: string
            enum: [INFO, WARNING, ERROR]
        - name: event_type
          in: query
          schema:
            type: string
        - name: user_id
          in: query
          schema:
            type: string
            format: uuid
        - name: resource_type
          in: query
          schema:
            type: string
            enum: [VOUCHER, USER, ACCOUNT, REPORT, DSL_TEMPLATE, THIRD_PARTY, PERIOD]
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 10
            maximum: 100
            default: 25
      responses:
        '200':
          description: Logs de auditoría obtenidos exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditLogsResponse'

  # ============================================
  # DSL ADDITIONAL ENDPOINTS
  # ============================================
  /dsl/validate:
    post:
      tags: [DSL]
      summary: Validar código DSL
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateDSLDirectRequest'
      responses:
        '200':
          description: Validación exitosa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DSLValidationResponse'
        '400':
          description: Errores de validación
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /dsl/test:
    post:
      tags: [DSL]
      summary: Probar código DSL con datos de prueba
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestDSLRequest'
      responses:
        '200':
          description: Prueba ejecutada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DSLTestResponse'
        '400':
          description: Error en la prueba
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # ============================================
  # THIRD PARTIES (TERCEROS)
  # ============================================
  /third-parties/search:
    get:
      tags: [Third Parties]
      summary: Buscar terceros
      parameters:
        - name: organization_id
          in: query
          required: true
          schema:
            type: string
            format: uuid
        - name: query
          in: query
          schema:
            type: string
          description: Búsqueda por nombre, documento o email
        - name: relationship_type
          in: query
          schema:
            type: string
            enum: [CUSTOMER, VENDOR, BOTH]
        - name: active_only
          in: query
          schema:
            type: boolean
            default: true
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 10
            maximum: 100
            default: 25
      responses:
        '200':
          description: Resultados de búsqueda obtenidos exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThirdPartiesSearchResponse'

  /third-parties:
        - name: organization_id
          in: query
          required: true
          schema:
            type: string
            format: uuid
        - name: search
          in: query
          schema:
            type: string
          description: Búsqueda por nombre o documento
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 10
            maximum: 100
            default: 25
      responses:
        '200':
          description: Lista de terceros obtenida exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThirdPartiesListResponse'

    post:
      tags: [Third Parties]
      summary: Crear tercero
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateThirdPartyRequest'
      responses:
        '201':
          description: Tercero creado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThirdPartyResponse'
        '400':
          description: Documento duplicado o datos inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /third-parties/{id}:
    get:
      tags: [Third Parties]
      summary: Obtener tercero por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Tercero obtenido exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThirdPartyResponse'

    put:
      tags: [Third Parties]
      summary: Actualizar tercero
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateThirdPartyRequest'
      responses:
        '200':
          description: Tercero actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThirdPartyResponse'

# ============================================
# COMPONENTS SCHEMAS
# ============================================
components:
  schemas:
    # Common Types
    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: object
          properties:
            code:
              type: string
              example: "VALIDATION_ERROR"
            message:
              type: string
              example: "Los datos proporcionados no son válidos"
            details:
              type: array
              items:
                type: string
          required: [code, message]
        timestamp:
          type: string
          format: date-time
      required: [success, error, timestamp]

    PaginationInfo:
      type: object
      properties:
        page:
          type: integer
          example: 1
        limit:
          type: integer
          example: 25
        total:
          type: integer
          example: 150
        pages:
          type: integer
          example: 6
      required: [page, limit, total, pages]

    # Health
    HealthResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            status:
              type: string
              enum: [healthy, degraded, unhealthy]
              example: healthy
            version:
              type: string
              example: "2.0.0"
            database:
              type: string
              enum: [connected, disconnected]
              example: connected
            dsl_engine:
              type: string
              enum: [ready, error]
              example: ready
            uptime:
              type: number
              example: 3600.5
        timestamp:
          type: string
          format: date-time
      required: [success, data, timestamp]

    MetricsResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            requests_total:
              type: integer
              example: 15420
            requests_per_second:
              type: number
              example: 45.2
            response_time_avg:
              type: number
              example: 120.5
            database_connections:
              type: integer
              example: 12
            memory_usage:
              type: number
              example: 245.6
            cpu_usage:
              type: number
              example: 15.3

    # Dashboard
    DashboardResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            kpis:
              $ref: '#/components/schemas/KPIs'
            charts:
              $ref: '#/components/schemas/Charts'
            recent_activity:
              type: array
              items:
                $ref: '#/components/schemas/ActivityItem'
            system_health:
              $ref: '#/components/schemas/SystemHealth'
        timestamp:
          type: string
          format: date-time

    KPIs:
      type: object
      properties:
        vouchers_today:
          type: integer
          example: 127
        vouchers_month:
          type: integer
          example: 3421
        total_amount_month:
          type: number
          example: 458750000.50
        pending_vouchers:
          type: integer
          example: 23
        processing_rate:
          type: number
          example: 98.5
        average_processing_time:
          type: number
          example: 1.2

    Charts:
      type: object
      properties:
        vouchers_by_day:
          type: object
          properties:
            labels:
              type: array
              items:
                type: string
              example: ["Lun", "Mar", "Mié", "Jue", "Vie", "Sáb", "Dom"]
            values:
              type: array
              items:
                type: integer
              example: [156, 143, 167, 134, 189, 98, 127]
        vouchers_by_type:
          type: object
          properties:
            labels:
              type: array
              items:
                type: string
            values:
              type: array
              items:
                type: integer
        vouchers_by_status:
          type: object
          properties:
            labels:
              type: array
              items:
                type: string
            values:
              type: array
              items:
                type: integer

    ActivityItem:
      type: object
      properties:
        id:
          type: string
          example: "v-2024-0127"
        type:
          type: string
          enum: [invoice_sale, invoice_purchase, payment, receipt, credit_note, debit_note]
        amount:
          type: number
          example: 2450000
        status:
          type: string
          enum: [PROCESSED, PENDING, ERROR]
        description:
          type: string
          example: "Factura Cliente ABC S.A."
        created_at:
          type: string
          format: date-time
        error:
          type: string
          nullable: true

    SystemHealth:
      type: object
      properties:
        status:
          type: string
          enum: [healthy, degraded, unhealthy]
        uptime:
          type: number
          example: 99.98
        api_response_time:
          type: number
          example: 45
        database_connections:
          type: integer
          example: 12
        queue_size:
          type: integer
          example: 3
        workers_active:
          type: integer
          example: 5
        cache_hit_rate:
          type: number
          example: 87.5

    ChartsResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          $ref: '#/components/schemas/Charts'

    # Vouchers
    VouchersListResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            vouchers:
              type: array
              items:
                $ref: '#/components/schemas/VoucherSummary'
            pagination:
              $ref: '#/components/schemas/PaginationInfo'
            summary:
              type: object
              properties:
                total_amount:
                  type: number
                by_status:
                  type: object
                  additionalProperties:
                    type: integer

    VoucherSummary:
      type: object
      properties:
        id:
          type: string
          format: uuid
        voucher_number:
          type: string
          example: "FV-000127"
        voucher_type:
          type: string
          enum: [invoice_sale, invoice_purchase, payment, receipt, credit_note, debit_note, journal_entry]
        voucher_date:
          type: string
          format: date
        description:
          type: string
        total_amount:
          type: number
        currency_code:
          type: string
          example: "COP"
        third_party_name:
          type: string
          nullable: true
        status:
          type: string
          enum: [PENDING, PROCESSING, PROCESSED, ERROR, CANCELLED]
        created_at:
          type: string
          format: date-time
        processed_at:
          type: string
          format: date-time
          nullable: true

    VoucherResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          $ref: '#/components/schemas/Voucher'

    Voucher:
      type: object
      properties:
        id:
          type: string
          format: uuid
        organization_id:
          type: string
          format: uuid
        voucher_number:
          type: string
          example: "FV-000127"
        voucher_type:
          type: string
          enum: [invoice_sale, invoice_purchase, payment, receipt, credit_note, debit_note, journal_entry]
        voucher_date:
          type: string
          format: date
        description:
          type: string
        total_amount:
          type: number
        currency_code:
          type: string
          example: "COP"
        exchange_rate:
          type: number
          example: 1.0
        third_party_id:
          type: string
          format: uuid
          nullable: true
        third_party_name:
          type: string
          nullable: true
        third_party_document:
          type: string
          nullable: true
        tax_details:
          type: object
          additionalProperties: true
        lines:
          type: array
          items:
            $ref: '#/components/schemas/VoucherLine'
        status:
          type: string
          enum: [PENDING, PROCESSING, PROCESSED, ERROR, CANCELLED]
        error_message:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
        processed_at:
          type: string
          format: date-time
          nullable: true

    VoucherLine:
      type: object
      properties:
        id:
          type: string
          format: uuid
        line_number:
          type: integer
        account_id:
          type: string
          format: uuid
          nullable: true
        description:
          type: string
        quantity:
          type: number
          example: 1
        unit_price:
          type: number
        line_amount:
          type: number
        tax_code:
          type: string
          nullable: true
        tax_rate:
          type: number
          example: 0.19
        tax_amount:
          type: number
        discount_rate:
          type: number
          example: 0.05
        discount_amount:
          type: number

    CreateVoucherRequest:
      type: object
      properties:
        organization_id:
          type: string
          format: uuid
        voucher_type:
          type: string
          enum: [invoice_sale, invoice_purchase, payment, receipt, credit_note, debit_note, journal_entry]
        voucher_date:
          type: string
          format: date
        description:
          type: string
        currency_code:
          type: string
          example: "COP"
        third_party_id:
          type: string
          format: uuid
          nullable: true
        lines:
          type: array
          items:
            $ref: '#/components/schemas/CreateVoucherLineRequest'
          minItems: 1
      required: [organization_id, voucher_type, voucher_date, description, lines]

    CreateVoucherLineRequest:
      type: object
      properties:
        description:
          type: string
        quantity:
          type: number
          minimum: 0
        unit_price:
          type: number
        tax_code:
          type: string
          nullable: true
        discount_rate:
          type: number
          minimum: 0
          maximum: 1
      required: [description, quantity, unit_price]

    UpdateVoucherRequest:
      allOf:
        - $ref: '#/components/schemas/CreateVoucherRequest'
        - type: object
          properties:
            id:
              type: string
              format: uuid
          required: [id]

    ProcessVoucherResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            voucher_id:
              type: string
              format: uuid
            journal_entry_id:
              type: string
              format: uuid
            lines_generated:
              type: integer
              example: 4
            total_debit:
              type: number
            total_credit:
              type: number
            processing_time_ms:
              type: number
              example: 150

    VoucherTypesResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/VoucherType'

    VoucherType:
      type: object
      properties:
        id:
          type: string
          format: uuid
        type_code:
          type: string
          example: "invoice_sale"
        name:
          type: string
          example: "Factura de Venta"
        description:
          type: string
        prefix:
          type: string
          example: "FV"
        next_number:
          type: integer
        requires_third_party:
          type: boolean
        is_active:
          type: boolean

    # Journal Entries
    JournalEntriesListResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            journal_entries:
              type: array
              items:
                $ref: '#/components/schemas/JournalEntrySummary'
            pagination:
              $ref: '#/components/schemas/PaginationInfo'

    JournalEntrySummary:
      type: object
      properties:
        id:
          type: string
          format: uuid
        entry_number:
          type: integer
        entry_date:
          type: string
          format: date
        description:
          type: string
        entry_type:
          type: string
          enum: [STANDARD, ADJUSTMENT, CLOSING, REVERSAL]
        total_debit:
          type: number
        total_credit:
          type: number
        lines_count:
          type: integer
        status:
          type: string
          enum: [DRAFT, PENDING, POSTED, CANCELLED]
        created_at:
          type: string
          format: date-time

    JournalEntryResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          $ref: '#/components/schemas/JournalEntry'

    JournalEntry:
      type: object
      properties:
        id:
          type: string
          format: uuid
        organization_id:
          type: string
          format: uuid
        entry_number:
          type: integer
        entry_date:
          type: string
          format: date
        voucher_id:
          type: string
          format: uuid
          nullable: true
        description:
          type: string
        entry_type:
          type: string
          enum: [STANDARD, ADJUSTMENT, CLOSING, REVERSAL]
        period:
          type: string
          pattern: '^[0-9]{4}-[0-9]{2}$'
        lines:
          type: array
          items:
            $ref: '#/components/schemas/JournalLine'
        status:
          type: string
          enum: [DRAFT, PENDING, POSTED, CANCELLED]
        is_reversed:
          type: boolean
        reversal_id:
          type: string
          format: uuid
          nullable: true
        created_at:
          type: string
          format: date-time
        approved_at:
          type: string
          format: date-time
          nullable: true

    JournalLine:
      type: object
      properties:
        id:
          type: string
          format: uuid
        line_number:
          type: integer
        account_id:
          type: string
          format: uuid
        account_code:
          type: string
        account_name:
          type: string
        debit_amount:
          type: number
        credit_amount:
          type: number
        description:
          type: string

    CreateJournalEntryRequest:
      type: object
      properties:
        organization_id:
          type: string
          format: uuid
        entry_date:
          type: string
          format: date
        description:
          type: string
        entry_type:
          type: string
          enum: [STANDARD, ADJUSTMENT, CLOSING, REVERSAL]
          default: STANDARD
        lines:
          type: array
          items:
            $ref: '#/components/schemas/CreateJournalLineRequest'
          minItems: 2
      required: [organization_id, entry_date, description, lines]

    CreateJournalLineRequest:
      type: object
      properties:
        account_id:
          type: string
          format: uuid
        debit_amount:
          type: number
          minimum: 0
          default: 0
        credit_amount:
          type: number
          minimum: 0
          default: 0
        description:
          type: string
      required: [account_id, description]

    # Accounts
    AccountsTreeResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/AccountTreeNode'

    AccountTreeNode:
      type: object
      properties:
        id:
          type: string
          format: uuid
        account_code:
          type: string
        name:
          type: string
        type:
          type: string
          enum: [ASSET, LIABILITY, EQUITY, INCOME, EXPENSE]
        nature:
          type: string
          enum: [D, C]
        level:
          type: integer
        is_detail:
          type: boolean
        is_active:
          type: boolean
        balance:
          type: number
          nullable: true
        children:
          type: array
          items:
            $ref: '#/components/schemas/AccountTreeNode'

    AccountsListResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/Account'

    AccountResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          $ref: '#/components/schemas/Account'

    Account:
      type: object
      properties:
        id:
          type: string
          format: uuid
        organization_id:
          type: string
          format: uuid
        account_code:
          type: string
        name:
          type: string
        type:
          type: string
          enum: [ASSET, LIABILITY, EQUITY, INCOME, EXPENSE]
        nature:
          type: string
          enum: [D, C]
        level:
          type: integer
        parent_id:
          type: string
          format: uuid
          nullable: true
        is_detail:
          type: boolean
        is_active:
          type: boolean
        metadata:
          type: object
          additionalProperties: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    CreateAccountRequest:
      type: object
      properties:
        organization_id:
          type: string
          format: uuid
        account_code:
          type: string
        name:
          type: string
        type:
          type: string
          enum: [ASSET, LIABILITY, EQUITY, INCOME, EXPENSE]
        nature:
          type: string
          enum: [D, C]
        parent_id:
          type: string
          format: uuid
          nullable: true
        is_detail:
          type: boolean
          default: false
      required: [organization_id, account_code, name, type, nature]

    UpdateAccountRequest:
      type: object
      properties:
        name:
          type: string
        is_detail:
          type: boolean
        is_active:
          type: boolean
        metadata:
          type: object
          additionalProperties: true

    AccountBalanceResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            account_id:
              type: string
              format: uuid
            account_code:
              type: string
            account_name:
              type: string
            total_debit:
              type: number
            total_credit:
              type: number
            balance:
              type: number
            period:
              type: string
              nullable: true

    AccountTypesResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/AccountType'

    AccountType:
      type: object
      properties:
        code:
          type: string
          enum: [ASSET, LIABILITY, EQUITY, INCOME, EXPENSE]
        name:
          type: string
          example: "Activos"
        description:
          type: string
        nature:
          type: string
          enum: [D, C]
          description: "D para débito, C para crédito"
        is_active:
          type: boolean

    # Reports
    ReportTypesResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/ReportType'

    ReportType:
      type: object
      properties:
        code:
          type: string
          example: "balance_general"
        name:
          type: string
          example: "Balance General"
        description:
          type: string
        category:
          type: string
          enum: [financial, fiscal, management]
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/ReportParameter'
        formats:
          type: array
          items:
            type: string
            enum: [PDF, XLSX, CSV, JSON]

    ReportParameter:
      type: object
      properties:
        name:
          type: string
        label:
          type: string
        type:
          type: string
          enum: [date, string, number, boolean, select]
        required:
          type: boolean
        options:
          type: array
          items:
            type: object
            properties:
              value:
                type: string
              label:
                type: string

    GenerateReportRequest:
      type: object
      properties:
        organization_id:
          type: string
          format: uuid
        report_type:
          type: string
        parameters:
          type: object
          additionalProperties: true
        format:
          type: string
          enum: [PDF, XLSX, CSV, JSON]
          default: PDF
      required: [organization_id, report_type, parameters]

    ReportJobResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            job_id:
              type: string
              format: uuid
            status:
              type: string
              enum: [GENERATING, COMPLETED, ERROR]
            estimated_time:
              type: integer
              description: Tiempo estimado en segundos

    ReportStatusResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            job_id:
              type: string
              format: uuid
            status:
              type: string
              enum: [GENERATING, COMPLETED, ERROR, EXPIRED]
            progress:
              type: integer
              minimum: 0
              maximum: 100
            file_url:
              type: string
              nullable: true
            file_size:
              type: integer
              nullable: true
            error_message:
              type: string
              nullable: true
            expires_at:
              type: string
              format: date-time
              nullable: true

    RecentReportsResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/RecentReport'

    RecentReport:
      type: object
      properties:
        id:
          type: string
          format: uuid
        report_type:
          type: string
        report_name:
          type: string
        file_format:
          type: string
          enum: [PDF, XLSX, CSV, JSON]
        file_size:
          type: integer
        status:
          type: string
          enum: [GENERATING, COMPLETED, ERROR, EXPIRED]
        generated_at:
          type: string
          format: date-time
        expires_at:
          type: string
          format: date-time
        download_url:
          type: string
          nullable: true

    # DSL Templates
    DSLTemplatesResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/DSLTemplate'

    DSLTemplateResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          $ref: '#/components/schemas/DSLTemplate'

    DSLTemplate:
      type: object
      properties:
        id:
          type: string
          format: uuid
        organization_id:
          type: string
          format: uuid
        template_code:
          type: string
          example: "invoice_sale_co"
        voucher_type:
          type: string
          enum: [invoice_sale, invoice_purchase, payment, receipt, credit_note, debit_note, journal_entry]
        country_code:
          type: string
          example: "CO"
        dsl_content:
          type: string
          description: Código DSL de la plantilla
        version:
          type: integer
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time

    CreateDSLTemplateRequest:
      type: object
      properties:
        organization_id:
          type: string
          format: uuid
        template_code:
          type: string
        voucher_type:
          type: string
          enum: [invoice_sale, invoice_purchase, payment, receipt, credit_note, debit_note, journal_entry]
        country_code:
          type: string
          enum: [CO, MX, CL, EC, UY, PE]
        dsl_content:
          type: string
      required: [organization_id, template_code, voucher_type, country_code, dsl_content]

    UpdateDSLTemplateRequest:
      type: object
      properties:
        dsl_content:
          type: string
        is_active:
          type: boolean

    ValidateDSLRequest:
      type: object
      properties:
        test_data:
          type: object
          additionalProperties: true
          description: Datos de prueba para validar la plantilla

    DSLValidationResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            valid:
              type: boolean
            errors:
              type: array
              items:
                type: object
                properties:
                  line:
                    type: integer
                  column:
                    type: integer
                  message:
                    type: string
            generated_lines:
              type: array
              items:
                type: object
                properties:
                  account_code:
                    type: string
                  debit_amount:
                    type: number
                  credit_amount:
                    type: number
                  description:
                    type: string

    DSLExamplesResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/DSLExample'

    DSLExample:
      type: object
      properties:
        template_code:
          type: string
        name:
          type: string
        description:
          type: string
        voucher_type:
          type: string
        dsl_content:
          type: string
        example_data:
          type: object
          additionalProperties: true

    # Catalogs
    CountriesResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/Country'

    Country:
      type: object
      properties:
        code:
          type: string
          example: "CO"
        name:
          type: string
          example: "Colombia"
        currency_code:
          type: string
          example: "COP"
        tax_id_format:
          type: string
          example: "NIT"
        fiscal_system:
          type: string

    CurrenciesResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/Currency'

    Currency:
      type: object
      properties:
        code:
          type: string
          example: "COP"
        name:
          type: string
          example: "Peso Colombiano"
        symbol:
          type: string
          example: "$"
        decimal_places:
          type: integer
          example: 2

    OrganizationsResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/Organization'

    Organization:
      type: object
      properties:
        id:
          type: string
          format: uuid
        code:
          type: string
          example: "DEMO-CO"
        name:
          type: string
          example: "Empresa Demo Colombia"
        country_code:
          type: string
          example: "CO"
        tax_id:
          type: string
          example: "900123456-1"
        is_active:
          type: boolean

    # Third Parties
    ThirdPartiesListResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            third_parties:
              type: array
              items:
                $ref: '#/components/schemas/ThirdParty'
            pagination:
              $ref: '#/components/schemas/PaginationInfo'

    ThirdPartyResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          $ref: '#/components/schemas/ThirdParty'

    ThirdParty:
      type: object
      properties:
        id:
          type: string
          format: uuid
        organization_id:
          type: string
          format: uuid
        document_type:
          type: string
          enum: [CC, NIT, CE, RUT, RFC, RUC, CUIT, CI, DNI, PASSPORT]
        document_number:
          type: string
        name:
          type: string
        email:
          type: string
          format: email
          nullable: true
        phone:
          type: string
          nullable: true
        address:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        country_code:
          type: string
        tax_regime:
          type: string
          nullable: true
        credit_limit:
          type: number
        payment_terms:
          type: integer
          description: Días de plazo de pago
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time

    CreateThirdPartyRequest:
      type: object
      properties:
        organization_id:
          type: string
          format: uuid
        document_type:
          type: string
          enum: [CC, NIT, CE, RUT, RFC, RUC, CUIT, CI, DNI, PASSPORT]
        document_number:
          type: string
        name:
          type: string
        email:
          type: string
          format: email
          nullable: true
        phone:
          type: string
          nullable: true
        address:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        country_code:
          type: string
          enum: [CO, MX, CL, EC, UY, PE]
        tax_regime:
          type: string
          nullable: true
        credit_limit:
          type: number
          default: 0
        payment_terms:
          type: integer
          default: 30
      required: [organization_id, document_type, document_number, name, country_code]

    UpdateThirdPartyRequest:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
          format: email
          nullable: true
        phone:
          type: string
          nullable: true
        address:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        tax_regime:
          type: string
          nullable: true
        credit_limit:
          type: number
        payment_terms:
          type: integer
        is_active:
          type: boolean

    # Tax Types
    TaxTypesResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            tax_types:
              type: array
              items:
                $ref: '#/components/schemas/TaxType'
            categories:
              type: array
              items:
                $ref: '#/components/schemas/TaxCategory'
            summary:
              type: object
              properties:
                total_tax_types:
                  type: integer
                active_tax_types:
                  type: integer

    TaxType:
      type: object
      properties:
        id:
          type: string
        code:
          type: string
          example: "IVA_19"
        name:
          type: string
          example: "IVA 19%"
        description:
          type: string
        rate:
          type: number
          example: 0.19
        type:
          type: string
          enum: [PERCENTAGE, FIXED]
        category:
          type: string
        is_retention:
          type: boolean
        applies_to:
          type: array
          items:
            type: string
            enum: [SALES, PURCHASES]
        country_code:
          type: string
          example: "CO"
        is_active:
          type: boolean

    TaxCategory:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        description:
          type: string

    # Document Types
    DocumentTypesResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            document_types:
              type: array
              items:
                $ref: '#/components/schemas/DocumentType'
            categories:
              type: array
              items:
                $ref: '#/components/schemas/DocumentCategory'
            summary:
              type: object
              properties:
                total_document_types:
                  type: integer
                active_document_types:
                  type: integer

    DocumentType:
      type: object
      properties:
        id:
          type: string
        code:
          type: string
          example: "CC"
        name:
          type: string
          example: "Cédula de Ciudadanía"
        description:
          type: string
        category:
          type: string
          enum: [PERSONAL, BUSINESS, SPECIAL]
        country_code:
          type: string
          example: "CO"
        format_pattern:
          type: string
        format_example:
          type: string
        min_length:
          type: integer
        max_length:
          type: integer
        is_active:
          type: boolean

    DocumentCategory:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        description:
          type: string

    # Periods
    PeriodCurrentResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          $ref: '#/components/schemas/Period'

    PeriodsListResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            periods:
              type: array
              items:
                $ref: '#/components/schemas/PeriodSummary'
            pagination:
              $ref: '#/components/schemas/PaginationInfo'
            summary:
              type: object
              properties:
                total_periods:
                  type: integer
                open_periods:
                  type: integer
                closed_periods:
                  type: integer

    Period:
      type: object
      properties:
        id:
          type: string
        organization_id:
          type: string
          format: uuid
        year:
          type: integer
        month:
          type: integer
        period_code:
          type: string
          example: "2025-01"
        period_name:
          type: string
          example: "Enero 2025"
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        status:
          type: string
          enum: [OPEN, CLOSED, LOCKED]
        is_current:
          type: boolean
        is_adjustable:
          type: boolean
        fiscal_year:
          type: integer
        total_vouchers:
          type: integer
        total_amount:
          type: number
        created_at:
          type: string
          format: date-time

    PeriodSummary:
      type: object
      properties:
        id:
          type: string
        year:
          type: integer
        month:
          type: integer
        period_code:
          type: string
        period_name:
          type: string
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        status:
          type: string
          enum: [OPEN, CLOSED, LOCKED]
        is_current:
          type: boolean
        total_vouchers:
          type: integer
        total_amount:
          type: number

    # Organizations & Users
    OrganizationCurrentResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          $ref: '#/components/schemas/OrganizationDetail'

    OrganizationDetail:
      allOf:
        - $ref: '#/components/schemas/Organization'
        - type: object
          properties:
            commercial_name:
              type: string
            document_type:
              type: string
            contact_info:
              type: object
              additionalProperties: true
            fiscal_info:
              type: object
              additionalProperties: true
            accounting_configuration:
              type: object
              additionalProperties: true
            dsl_configuration:
              type: object
              additionalProperties: true

    UserProfileResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          $ref: '#/components/schemas/UserProfile'

    UserProfile:
      type: object
      properties:
        id:
          type: string
          format: uuid
        organization_id:
          type: string
          format: uuid
        email:
          type: string
          format: email
        first_name:
          type: string
        last_name:
          type: string
        full_name:
          type: string
        role:
          type: string
        permissions:
          type: array
          items:
            type: string
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time

    UserPreferencesResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          $ref: '#/components/schemas/UserPreferences'

    UserPreferences:
      type: object
      properties:
        user_id:
          type: string
          format: uuid
        preferences:
          type: object
          additionalProperties: true
        recent_activity:
          type: object
          additionalProperties: true
        customizations:
          type: object
          additionalProperties: true
        saved_filters:
          type: object
          additionalProperties: true

    # Audit Logs
    AuditLogsResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            logs:
              type: array
              items:
                $ref: '#/components/schemas/AuditLog'
            pagination:
              $ref: '#/components/schemas/PaginationInfo'
            summary:
              type: object
              properties:
                total_logs_today:
                  type: integer
                info_logs:
                  type: integer
                warning_logs:
                  type: integer
                error_logs:
                  type: integer

    AuditLog:
      type: object
      properties:
        id:
          type: string
        organization_id:
          type: string
          format: uuid
        timestamp:
          type: string
          format: date-time
        level:
          type: string
          enum: [INFO, WARNING, ERROR]
        event_type:
          type: string
        action:
          type: string
          enum: [CREATE, READ, UPDATE, DELETE, LOGIN, LOGOUT, PROCESS, VALIDATE]
        resource_type:
          type: string
        resource_id:
          type: string
        user_id:
          type: string
          format: uuid
        user_email:
          type: string
          format: email
        ip_address:
          type: string
        description:
          type: string
        details:
          type: object
          additionalProperties: true
        result:
          type: string
          enum: [SUCCESS, ERROR, WARNING]

    # DSL Additional Schemas
    ValidateDSLDirectRequest:
      type: object
      properties:
        dsl_content:
          type: string
          description: Código DSL a validar
        organization_id:
          type: string
          format: uuid
        voucher_type:
          type: string
          enum: [invoice_sale, invoice_purchase, payment, receipt, credit_note, debit_note, journal_entry]
      required: [dsl_content, organization_id, voucher_type]

    TestDSLRequest:
      type: object
      properties:
        dsl_content:
          type: string
          description: Código DSL a probar
        test_data:
          type: object
          additionalProperties: true
          description: Datos de prueba para el DSL
        organization_id:
          type: string
          format: uuid
      required: [dsl_content, test_data, organization_id]

    DSLTestResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            test_result:
              type: object
              properties:
                execution_successful:
                  type: boolean
                execution_time:
                  type: number
                generated_entries:
                  type: integer
                is_balanced:
                  type: boolean
                total_debit:
                  type: number
                total_credit:
                  type: number
            generated_journal_lines:
              type: array
              items:
                type: object
                properties:
                  line_number:
                    type: integer
                  account_code:
                    type: string
                  account_name:
                    type: string
                  debit_amount:
                    type: number
                  credit_amount:
                    type: number
                  description:
                    type: string
            validation_checks:
              type: object
              additionalProperties: true
            performance_metrics:
              type: object
              additionalProperties: true

    # Third Parties Search
    ThirdPartiesSearchResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            third_parties:
              type: array
              items:
                $ref: '#/components/schemas/ThirdPartySearchResult'
            search_metadata:
              type: object
              properties:
                query:
                  type: string
                total_found:
                  type: integer
                search_fields:
                  type: array
                  items:
                    type: string
                filters_applied:
                  type: object
                  additionalProperties: true
            summary:
              type: object
              properties:
                total_customers:
                  type: integer
                total_vendors:
                  type: integer
                total_both:
                  type: integer

    ThirdPartySearchResult:
      type: object
      properties:
        id:
          type: string
          format: uuid
        document_type:
          type: string
        document_number:
          type: string
        name:
          type: string
        email:
          type: string
          format: email
          nullable: true
        phone:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        country_code:
          type: string
        credit_limit:
          type: number
        current_balance:
          type: number
        payment_terms:
          type: integer
        is_active:
          type: boolean
        relationship_type:
          type: string
          enum: [CUSTOMER, VENDOR, BOTH]

  # ============================================
  # RESPONSE WRAPPERS
  # ============================================
  responses:
    UnauthorizedError:
      description: Token de autenticación requerido o inválido
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            success: false
            error:
              code: "UNAUTHORIZED"
              message: "Token de autenticación requerido"
            timestamp: "2025-01-24T10:30:00Z"

    ForbiddenError:
      description: Acceso denegado - permisos insuficientes
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            success: false
            error:
              code: "FORBIDDEN"
              message: "No tienes permisos para realizar esta acción"
            timestamp: "2025-01-24T10:30:00Z"

    NotFoundError:
      description: Recurso no encontrado
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            success: false
            error:
              code: "NOT_FOUND"
              message: "El recurso solicitado no fue encontrado"
            timestamp: "2025-01-24T10:30:00Z"

    ValidationError:
      description: Error de validación de datos
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            success: false
            error:
              code: "VALIDATION_ERROR"
              message: "Los datos proporcionados no son válidos"
              details: [
                "El campo 'voucher_type' es requerido",
                "El monto debe ser mayor a cero"
              ]
            timestamp: "2025-01-24T10:30:00Z"

    InternalServerError:
      description: Error interno del servidor
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            success: false
            error:
              code: "INTERNAL_ERROR"
              message: "Ha ocurrido un error interno del servidor"
            timestamp: "2025-01-24T10:30:00Z"