// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Soporte API",
            "email": "soporte@motorcontable.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/organization/current": {
            "get": {
                "description": "Retorna la información completa de la organización actual del sistema",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organización"
                ],
                "summary": "Obtiene organización actual",
                "responses": {
                    "200": {
                        "description": "Información de la organización",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.OrganizationDetail"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Organización no encontrada",
                        "schema": {
                            "$ref": "#/definitions/models.StandardResponse"
                        }
                    },
                    "500": {
                        "description": "Error interno del servidor",
                        "schema": {
                            "$ref": "#/definitions/models.StandardResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Actualiza la configuración de la organización actual",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organización"
                ],
                "summary": "Actualiza organización",
                "parameters": [
                    {
                        "description": "Datos de la organización a actualizar",
                        "name": "organization",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Organización actualizada",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.OrganizationDetail"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Datos inválidos",
                        "schema": {
                            "$ref": "#/definitions/models.StandardResponse"
                        }
                    },
                    "404": {
                        "description": "Organización no encontrada",
                        "schema": {
                            "$ref": "#/definitions/models.StandardResponse"
                        }
                    },
                    "500": {
                        "description": "Error interno del servidor",
                        "schema": {
                            "$ref": "#/definitions/models.StandardResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/organization/dashboard": {
            "get": {
                "description": "Retorna métricas y KPIs principales de la organización",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organización"
                ],
                "summary": "Dashboard de organización",
                "responses": {
                    "200": {
                        "description": "Datos del dashboard",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": true
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Organización no encontrada",
                        "schema": {
                            "$ref": "#/definitions/models.StandardResponse"
                        }
                    },
                    "500": {
                        "description": "Error interno del servidor",
                        "schema": {
                            "$ref": "#/definitions/models.StandardResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/organization/validate": {
            "post": {
                "description": "Ejecuta validaciones de reglas contables y de negocio sobre la organización",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organización"
                ],
                "summary": "Valida reglas de negocio",
                "responses": {
                    "200": {
                        "description": "Resultado de validaciones",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": true
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Organización no encontrada",
                        "schema": {
                            "$ref": "#/definitions/models.StandardResponse"
                        }
                    },
                    "500": {
                        "description": "Error interno del servidor",
                        "schema": {
                            "$ref": "#/definitions/models.StandardResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/vouchers": {
            "get": {
                "description": "Retorna una lista paginada de comprobantes de la organización",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comprobantes"
                ],
                "summary": "Lista de comprobantes",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Número de página",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Elementos por página",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de comprobantes",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.VouchersListResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Parámetros inválidos",
                        "schema": {
                            "$ref": "#/definitions/models.StandardResponse"
                        }
                    },
                    "500": {
                        "description": "Error interno del servidor",
                        "schema": {
                            "$ref": "#/definitions/models.StandardResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Crea un nuevo comprobante contable con sus líneas",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comprobantes"
                ],
                "summary": "Crear comprobante",
                "parameters": [
                    {
                        "description": "Datos del comprobante",
                        "name": "voucher",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.VoucherCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Comprobante creado",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.Voucher"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Datos inválidos",
                        "schema": {
                            "$ref": "#/definitions/models.StandardResponse"
                        }
                    },
                    "500": {
                        "description": "Error interno del servidor",
                        "schema": {
                            "$ref": "#/definitions/models.StandardResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/vouchers/by-date-range": {
            "get": {
                "description": "Retorna comprobantes filtrados por rango de fechas",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comprobantes"
                ],
                "summary": "Comprobantes por fechas",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Fecha inicial (YYYY-MM-DD)",
                        "name": "start_date",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Fecha final (YYYY-MM-DD)",
                        "name": "end_date",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Número de página",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Elementos por página",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de comprobantes",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.VouchersListResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Parámetros inválidos",
                        "schema": {
                            "$ref": "#/definitions/models.StandardResponse"
                        }
                    },
                    "500": {
                        "description": "Error interno del servidor",
                        "schema": {
                            "$ref": "#/definitions/models.StandardResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/vouchers/generate": {
            "post": {
                "description": "Genera un comprobante automáticamente usando una plantilla DSL",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comprobantes"
                ],
                "summary": "Generar desde plantilla",
                "parameters": [
                    {
                        "description": "Datos para generación",
                        "name": "generation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Comprobante generado",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.Voucher"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Datos inválidos",
                        "schema": {
                            "$ref": "#/definitions/models.StandardResponse"
                        }
                    },
                    "500": {
                        "description": "Error interno del servidor",
                        "schema": {
                            "$ref": "#/definitions/models.StandardResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/vouchers/{id}": {
            "get": {
                "description": "Retorna el detalle completo de un comprobante específico",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comprobantes"
                ],
                "summary": "Detalle de comprobante",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID del comprobante",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Detalle del comprobante",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.VoucherDetail"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Comprobante no encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.StandardResponse"
                        }
                    },
                    "500": {
                        "description": "Error interno del servidor",
                        "schema": {
                            "$ref": "#/definitions/models.StandardResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/vouchers/{id}/cancel": {
            "post": {
                "description": "Cambia el estado del comprobante a cancelado",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comprobantes"
                ],
                "summary": "Cancelar comprobante",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID del comprobante",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comprobante cancelado exitosamente",
                        "schema": {
                            "$ref": "#/definitions/models.StandardResponse"
                        }
                    },
                    "400": {
                        "description": "No se puede cancelar",
                        "schema": {
                            "$ref": "#/definitions/models.StandardResponse"
                        }
                    },
                    "404": {
                        "description": "Comprobante no encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.StandardResponse"
                        }
                    },
                    "500": {
                        "description": "Error interno del servidor",
                        "schema": {
                            "$ref": "#/definitions/models.StandardResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/vouchers/{id}/post": {
            "post": {
                "description": "Cambia el estado del comprobante a contabilizado y genera asiento",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comprobantes"
                ],
                "summary": "Contabilizar comprobante",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID del comprobante",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comprobante contabilizado exitosamente",
                        "schema": {
                            "$ref": "#/definitions/models.StandardResponse"
                        }
                    },
                    "400": {
                        "description": "No se puede contabilizar",
                        "schema": {
                            "$ref": "#/definitions/models.StandardResponse"
                        }
                    },
                    "404": {
                        "description": "Comprobante no encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.StandardResponse"
                        }
                    },
                    "500": {
                        "description": "Error interno del servidor",
                        "schema": {
                            "$ref": "#/definitions/models.StandardResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Account": {
            "type": "object",
            "properties": {
                "accepts_movement": {
                    "type": "boolean"
                },
                "account_type": {
                    "description": "ASSET, LIABILITY, EQUITY, REVENUE, EXPENSE",
                    "type": "string"
                },
                "balance_credit": {
                    "type": "number"
                },
                "balance_debit": {
                    "type": "number"
                },
                "code": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "current_balance": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "level": {
                    "description": "1,2,3,4,5 según PUC",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "natural_balance": {
                    "description": "DEBIT, CREDIT",
                    "type": "string"
                },
                "organization_id": {
                    "type": "string"
                },
                "parent_account_id": {
                    "type": "string"
                },
                "puc_code": {
                    "description": "Código oficial PUC",
                    "type": "string"
                },
                "requires_cost_center": {
                    "type": "boolean"
                },
                "requires_third_party": {
                    "type": "boolean"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.AccountingConfig": {
            "type": "object",
            "properties": {
                "allow_negative_inventory": {
                    "type": "boolean"
                },
                "auto_numbering": {
                    "type": "boolean"
                },
                "current_period": {
                    "type": "string"
                },
                "default_payment_terms": {
                    "type": "integer"
                },
                "default_tax_rate": {
                    "type": "number"
                },
                "last_closed_period": {
                    "type": "string"
                },
                "require_balanced_entries": {
                    "type": "boolean"
                }
            }
        },
        "models.ContactInfo": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "postal_code": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "models.DSLConfig": {
            "type": "object",
            "properties": {
                "auto_process_vouchers": {
                    "type": "boolean"
                },
                "error_handling": {
                    "type": "string"
                },
                "parallel_processing": {
                    "type": "boolean"
                },
                "template_cache_enabled": {
                    "type": "boolean"
                },
                "validation_level": {
                    "type": "string"
                }
            }
        },
        "models.DSLProcessingInfo": {
            "type": "object",
            "properties": {
                "execution_time_ms": {
                    "type": "integer"
                },
                "generated_lines": {
                    "type": "integer"
                },
                "processed_at": {
                    "type": "string"
                },
                "processing_status": {
                    "description": "SUCCESS, ERROR, PENDING",
                    "type": "string"
                },
                "template_id": {
                    "type": "string"
                },
                "template_name": {
                    "type": "string"
                },
                "validation_errors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "variables": {
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "models.ErrorInfo": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "models.FiscalInfo": {
            "type": "object",
            "properties": {
                "accounting_standard": {
                    "type": "string"
                },
                "decimal_places": {
                    "type": "integer"
                },
                "fiscal_year_end": {
                    "type": "string"
                },
                "fiscal_year_start": {
                    "type": "string"
                },
                "reporting_currency": {
                    "type": "string"
                },
                "rounding_method": {
                    "type": "string"
                },
                "tax_regime": {
                    "type": "string"
                }
            }
        },
        "models.OrganizationDetail": {
            "type": "object",
            "properties": {
                "accounting_configuration": {
                    "$ref": "#/definitions/models.AccountingConfig"
                },
                "code": {
                    "type": "string"
                },
                "commercial_name": {
                    "type": "string"
                },
                "contact_info": {
                    "$ref": "#/definitions/models.ContactInfo"
                },
                "country_code": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "currency_default": {
                    "type": "string"
                },
                "document_type": {
                    "type": "string"
                },
                "dsl_configuration": {
                    "$ref": "#/definitions/models.DSLConfig"
                },
                "fiscal_info": {
                    "$ref": "#/definitions/models.FiscalInfo"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "language": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "statistics": {
                    "$ref": "#/definitions/models.OrganizationStatistics"
                },
                "subscription_info": {
                    "$ref": "#/definitions/models.SubscriptionInfo"
                },
                "system_settings": {
                    "$ref": "#/definitions/models.SystemSettings"
                },
                "tax_id": {
                    "type": "string"
                },
                "timezone": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_permissions": {
                    "$ref": "#/definitions/models.UserPermissions"
                }
            }
        },
        "models.OrganizationStatistics": {
            "type": "object",
            "properties": {
                "active_users": {
                    "type": "integer"
                },
                "api_calls_month": {
                    "type": "integer"
                },
                "storage_used_mb": {
                    "type": "integer"
                },
                "total_accounts": {
                    "type": "integer"
                },
                "total_journal_entries": {
                    "type": "integer"
                },
                "total_vouchers": {
                    "type": "integer"
                }
            }
        },
        "models.PaginationInfo": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "pages": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "models.Period": {
            "type": "object",
            "properties": {
                "closed_at": {
                    "type": "string"
                },
                "closed_by_user_id": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "is_current": {
                    "type": "boolean"
                },
                "month": {
                    "description": "NULL para períodos anuales",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "string"
                },
                "period_type": {
                    "description": "MONTHLY, QUARTERLY, YEARLY",
                    "type": "string"
                },
                "quarter": {
                    "description": "NULL para períodos mensuales/anuales",
                    "type": "integer"
                },
                "start_date": {
                    "type": "string"
                },
                "status": {
                    "description": "OPEN, CLOSED, LOCKED",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "models.StandardResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "error": {
                    "$ref": "#/definitions/models.ErrorInfo"
                },
                "success": {
                    "type": "boolean"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "models.SubscriptionInfo": {
            "type": "object",
            "properties": {
                "current_month_vouchers": {
                    "type": "integer"
                },
                "current_users": {
                    "type": "integer"
                },
                "expires_at": {
                    "type": "string"
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "max_monthly_vouchers": {
                    "type": "integer"
                },
                "max_users": {
                    "type": "integer"
                },
                "plan": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "models.SystemSettings": {
            "type": "object",
            "properties": {
                "audit_level": {
                    "type": "string"
                },
                "backup_frequency": {
                    "type": "string"
                },
                "notification_preferences": {
                    "type": "object",
                    "additionalProperties": true
                },
                "retention_period_days": {
                    "type": "integer"
                }
            }
        },
        "models.ThirdParty": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "commercial_name": {
                    "type": "string"
                },
                "company_name": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "document_number": {
                    "type": "string"
                },
                "document_type": {
                    "description": "CC, NIT, CE, PP, etc.",
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "last_name": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "string"
                },
                "person_type": {
                    "description": "NATURAL, JURIDICA",
                    "type": "string"
                },
                "taxpayer_type": {
                    "description": "RESPONSABLE_IVA, NO_RESPONSABLE_IVA, REGIMEN_SIMPLE",
                    "type": "string"
                },
                "third_party_type": {
                    "description": "CUSTOMER, SUPPLIER, EMPLOYEE, OTHER",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "verification_digit": {
                    "type": "string"
                }
            }
        },
        "models.UserPermissions": {
            "type": "object",
            "properties": {
                "can_close_periods": {
                    "type": "boolean"
                },
                "can_edit_dsl_templates": {
                    "type": "boolean"
                },
                "can_edit_organization": {
                    "type": "boolean"
                },
                "can_manage_users": {
                    "type": "boolean"
                },
                "can_view_all_data": {
                    "type": "boolean"
                }
            }
        },
        "models.Voucher": {
            "type": "object",
            "properties": {
                "cost_center_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by_user_id": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_balanced": {
                    "type": "boolean"
                },
                "number": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "string"
                },
                "period_id": {
                    "type": "string"
                },
                "posted_at": {
                    "type": "string"
                },
                "posted_by_user_id": {
                    "type": "string"
                },
                "reference": {
                    "type": "string"
                },
                "status": {
                    "description": "DRAFT, POSTED, CANCELLED",
                    "type": "string"
                },
                "third_party_id": {
                    "type": "string"
                },
                "total_credit": {
                    "type": "number"
                },
                "total_debit": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                },
                "voucher_lines": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.VoucherLine"
                    }
                },
                "voucher_type": {
                    "description": "JOURNAL, PURCHASE, SALE, PAYMENT, RECEIPT, ADJUSTMENT",
                    "type": "string"
                }
            }
        },
        "models.VoucherAdditionalData": {
            "type": "object",
            "properties": {
                "approval_required": {
                    "type": "boolean"
                },
                "approved_at": {
                    "type": "string"
                },
                "approved_by": {
                    "type": "string"
                },
                "auto_generated": {
                    "type": "boolean"
                },
                "custom_fields": {
                    "type": "object",
                    "additionalProperties": true
                },
                "reversal_of": {
                    "type": "string"
                },
                "reversible": {
                    "type": "boolean"
                },
                "source_reference": {
                    "type": "string"
                },
                "source_system": {
                    "type": "string"
                }
            }
        },
        "models.VoucherAttachment": {
            "type": "object",
            "properties": {
                "content_type": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "file_name": {
                    "type": "string"
                },
                "file_path": {
                    "type": "string"
                },
                "file_size": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "uploaded_at": {
                    "type": "string"
                },
                "uploaded_by": {
                    "type": "string"
                }
            }
        },
        "models.VoucherCreateRequest": {
            "type": "object",
            "required": [
                "date",
                "description",
                "voucher_lines",
                "voucher_type"
            ],
            "properties": {
                "additional_data": {
                    "$ref": "#/definitions/models.VoucherAdditionalData"
                },
                "cost_center_id": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "reference": {
                    "type": "string"
                },
                "third_party_id": {
                    "type": "string"
                },
                "voucher_lines": {
                    "type": "array",
                    "minItems": 2,
                    "items": {
                        "$ref": "#/definitions/models.VoucherLineRequest"
                    }
                },
                "voucher_type": {
                    "type": "string"
                }
            }
        },
        "models.VoucherDetail": {
            "type": "object",
            "properties": {
                "additional_data": {
                    "$ref": "#/definitions/models.VoucherAdditionalData"
                },
                "attachments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.VoucherAttachment"
                    }
                },
                "cost_center_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by_user_id": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "dsl_processing": {
                    "$ref": "#/definitions/models.DSLProcessingInfo"
                },
                "id": {
                    "type": "string"
                },
                "is_balanced": {
                    "type": "boolean"
                },
                "number": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "string"
                },
                "period": {
                    "$ref": "#/definitions/models.Period"
                },
                "period_id": {
                    "type": "string"
                },
                "posted_at": {
                    "type": "string"
                },
                "posted_by_user_id": {
                    "type": "string"
                },
                "reference": {
                    "type": "string"
                },
                "status": {
                    "description": "DRAFT, POSTED, CANCELLED",
                    "type": "string"
                },
                "third_party": {
                    "$ref": "#/definitions/models.ThirdParty"
                },
                "third_party_id": {
                    "type": "string"
                },
                "total_credit": {
                    "type": "number"
                },
                "total_debit": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                },
                "voucher_lines": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.VoucherLine"
                    }
                },
                "voucher_type": {
                    "description": "JOURNAL, PURCHASE, SALE, PAYMENT, RECEIPT, ADJUSTMENT",
                    "type": "string"
                }
            }
        },
        "models.VoucherLine": {
            "type": "object",
            "properties": {
                "account": {
                    "description": "Relaciones",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Account"
                        }
                    ]
                },
                "account_id": {
                    "type": "string"
                },
                "base_amount": {
                    "type": "number"
                },
                "cost_center_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "credit_amount": {
                    "type": "number"
                },
                "debit_amount": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "line_number": {
                    "type": "integer"
                },
                "tax_amount": {
                    "type": "number"
                },
                "tax_rate": {
                    "type": "number"
                },
                "third_party": {
                    "$ref": "#/definitions/models.ThirdParty"
                },
                "third_party_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "voucher_id": {
                    "type": "string"
                }
            }
        },
        "models.VoucherLineRequest": {
            "type": "object",
            "required": [
                "account_id",
                "description"
            ],
            "properties": {
                "account_id": {
                    "type": "string"
                },
                "base_amount": {
                    "type": "number"
                },
                "cost_center_id": {
                    "type": "string"
                },
                "credit_amount": {
                    "type": "number"
                },
                "debit_amount": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "tax_amount": {
                    "type": "number"
                },
                "tax_rate": {
                    "type": "number"
                },
                "third_party_id": {
                    "type": "string"
                }
            }
        },
        "models.VouchersListResponse": {
            "type": "object",
            "properties": {
                "pagination": {
                    "$ref": "#/definitions/models.PaginationInfo"
                },
                "vouchers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Voucher"
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:3000",
	BasePath:         "/api/v1",
	Schemes:          []string{"http", "https"},
	Title:            "Motor Contable POC API",
	Description:      "API para el Proof of Concept del Motor Contable Colombiano",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
